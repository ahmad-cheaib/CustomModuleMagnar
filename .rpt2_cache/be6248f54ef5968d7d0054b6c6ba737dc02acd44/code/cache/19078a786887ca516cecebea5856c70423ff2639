{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { Injectable, Injector } from \"@angular/core\";\r\nimport { throwError as observableThrowError } from 'rxjs';\r\nimport { take, filter, catchError, switchMap, finalize } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../service/login.service';\r\nimport { NotificationService } from '../service/notification.service';\r\nimport { Login } from '../models/login';\r\nlet TokenInterceptorService = class TokenInterceptorService {\r\n    constructor(_notificationService, injector, router, _loginService) {\r\n        this._notificationService = _notificationService;\r\n        this.injector = injector;\r\n        this.router = router;\r\n        this._loginService = _loginService;\r\n        this.login = new Login();\r\n    }\r\n    addToken(req, token) {\r\n        return req.clone({ setHeaders: { Authorization: 'Bearer ' + token } });\r\n    }\r\n    intercept(req, next) {\r\n        const token = localStorage.getItem('Logintoken');\r\n        let lang = localStorage.getItem('currentLanguage') ? localStorage.getItem('currentLanguage') : 'en';\r\n        req = req.clone({\r\n            setHeaders: {\r\n                'Accept-Language': lang\r\n            }\r\n        });\r\n        if (req.url.endsWith('/connect/token') ||\r\n            req.url.includes('/assets')) {\r\n            return next.handle(req);\r\n        }\r\n        if (!req.url.endsWith('/LeaveRequest/PutLeaveRequest') &&\r\n            !req.url.endsWith('/LeaveRequest/PostLeaveRequest') &&\r\n            !req.url.endsWith('AddSessionData') &&\r\n            !req.url.endsWith('/connect/token')) {\r\n            req = req.clone({\r\n                setHeaders: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n        }\r\n        const refreshToken = localStorage.getItem('Refreshtoken');\r\n        // if(!refreshToken || refreshToken== 'null') {\r\n        // \tif(!this.previousRouteService.getPreviousUrl().includes('login')) {\r\n        // \t\tthis.router.navigate(['/login'], { queryParams: { returnUrl: this.previousRouteService.getPreviousUrl() }});\r\n        // \t}\r\n        // }\r\n        if (this._loginService.isTokenExpired(token) && !this._loginService.isRefreshingToken) {\r\n            this._loginService.isRefreshingToken = true;\r\n            this._loginService.tokenSubject.next(null);\r\n            return this._loginService.refreshtoken(refreshToken).pipe(switchMap((response) => {\r\n                if (response) {\r\n                    this.login.token = response.access_token;\r\n                    this._loginService.fillLoginInfo(response);\r\n                    return next.handle(this.addToken(req, this.login.token));\r\n                }\r\n            }), finalize(() => {\r\n                this._loginService.isRefreshingToken = false;\r\n            }));\r\n        }\r\n        else if (this._loginService.isTokenExpired(token) && this._loginService.isRefreshingToken) {\r\n            return this._loginService.tokenSubject.pipe(filter(token => token != null), take(1), switchMap(token => {\r\n                return next.handle(this.addToken(req, token));\r\n            }));\r\n        }\r\n        else {\r\n            return next.handle(this.addToken(req, token)).pipe(catchError(error => {\r\n                // if(error.url && error.url.endsWith('/connect/token') && this._loginService.isRefreshingToken){\r\n                // \tif(!this.previousRouteService.getPreviousUrl().includes('login')) {\r\n                // \t\tthis.router.navigate(['/login'], { queryParams: { returnUrl: this.previousRouteService.getPreviousUrl() }});\r\n                // \t}\r\n                // }\r\n                if (error instanceof HttpErrorResponse) {\r\n                    switch (error.status) {\r\n                        case 400:\r\n                            return this.handle400Error(error);\r\n                        case 401:\r\n                            return this.handle401Error(req, next);\r\n                        default:\r\n                            return observableThrowError(error);\r\n                    }\r\n                }\r\n                else {\r\n                    return observableThrowError(error);\r\n                }\r\n            }));\r\n        }\r\n        //return next.handle(req);\r\n    }\r\n    handle400Error(error) {\r\n        if (error && error.status === 400 && error.error && error.error === 'Invalid Token.') {\r\n            // If we get a 400 and the error message is 'invalid_grant', the token is no longer valid so logout.\r\n            this.router.navigate(['login']);\r\n        }\r\n        return observableThrowError(error);\r\n    }\r\n    handle401Error(req, next) {\r\n        if (!this._loginService.isRefreshingToken) {\r\n            this._loginService.isRefreshingToken = true;\r\n            // Reset here so that the following requests wait until the token\r\n            // comes back from the refreshToken call.\r\n            this._loginService.tokenSubject.next(null);\r\n            const loginService = this.injector.get(LoginService);\r\n            let refreshToken = localStorage.getItem('Refreshtoken');\r\n            return loginService.refreshtoken(refreshToken).pipe(switchMap((response) => {\r\n                if (response) {\r\n                    this.login.token = response.access_token;\r\n                    localStorage.setItem('Logintoken', this.login.token);\r\n                    localStorage.setItem('Refreshtoken', response.refresh_token);\r\n                    let newToken = this.login.token;\r\n                    this._loginService.tokenSubject.next(newToken);\r\n                    return next.handle(this.addToken(req, newToken));\r\n                }\r\n            }), finalize(() => {\r\n                this._loginService.isRefreshingToken = false;\r\n            }));\r\n        }\r\n        else {\r\n            return this._loginService.tokenSubject.pipe(filter(token => token != null), take(1), switchMap(token => {\r\n                return next.handle(this.addToken(req, token));\r\n            }));\r\n        }\r\n    }\r\n};\r\nTokenInterceptorService = __decorate([\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [NotificationService,\r\n        Injector,\r\n        Router,\r\n        LoginService])\r\n], TokenInterceptorService);\r\nexport { TokenInterceptorService };\r\n//# sourceMappingURL=Token-interceptor.js.map","map":{"version":3,"file":"Token-interceptor.js","sourceRoot":"","sources":["../../src/app/service/Token-interceptor.ts"],"names":[],"mappings":"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"}}
