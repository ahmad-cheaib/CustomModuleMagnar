{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UtilityService } from './utility.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Department } from '../models/department';\r\nimport { ConfigurationService } from './configuration.service';\r\nlet DepartmentService = class DepartmentService {\r\n    constructor(http, utilityService, configurationService) {\r\n        this.http = http;\r\n        this.utilityService = utilityService;\r\n        this.configurationService = configurationService;\r\n        this.department = new Department();\r\n        this.url = this.configurationService.baseUrl + '/api/Department';\r\n    }\r\n    getDepartment(departmentId) {\r\n        return this.http\r\n            .get(this.url + '/GetDepartment?id=' + departmentId)\r\n            .pipe(catchError(this.utilityService.handleErrorPromise));\r\n    }\r\n    createDepartment(department) {\r\n        return this.http\r\n            .post(this.url + '/PostDepartment?', JSON.stringify(department))\r\n            .pipe(catchError(this.utilityService.handleErrorPromise));\r\n    }\r\n    updateDepartment(department) {\r\n        return this.http\r\n            .put(this.url + '/PutDepartment?', JSON.stringify(department))\r\n            .pipe(catchError(this.utilityService.handleErrorPromise));\r\n    }\r\n    deleteDepartment(departmentId) {\r\n        return this.http.delete(this.url + '/DeleteDepartment?id=' + departmentId)\r\n            .pipe(catchError(this.utilityService.handleErrorPromise));\r\n    }\r\n};\r\nDepartmentService = __decorate([\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [HttpClient,\r\n        UtilityService,\r\n        ConfigurationService])\r\n], DepartmentService);\r\nexport { DepartmentService };\r\n//# sourceMappingURL=department.service.js.map","map":{"version":3,"file":"department.service.js","sourceRoot":"","sources":["../../src/app/service/department.service.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAC5C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAE/D,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAM7B,YAAoB,IAAgB,EAC3B,cAA8B,EAC9B,oBAA0C;QAF/B,SAAI,GAAJ,IAAI,CAAY;QAC3B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,yBAAoB,GAApB,oBAAoB,CAAsB;QAL5C,eAAU,GAAG,IAAI,UAAU,EAAE,CAAC;QAMpC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,GAAG,iBAAiB,CAAC;IAClE,CAAC;IAED,aAAa,CAAC,YAAY;QACzB,OAAO,IAAI,CAAC,IAAI;aACd,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,oBAAoB,GAAG,YAAY,CAAC;aACnD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,gBAAgB,CAAC,UAAU;QAC1B,OAAO,IAAI,CAAC,IAAI;aACd,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;aAC/D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,gBAAgB,CAAC,UAAU;QAC1B,OAAO,IAAI,CAAC,IAAI;aACd,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;aAC7D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,gBAAgB,CAAC,YAAY;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,uBAAuB,GAAG,YAAY,CAAC;aACzE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC3D,CAAC;CACD,CAAA;AAlCY,iBAAiB;IAD7B,UAAU,EAAE;qCAOc,UAAU;QACX,cAAc;QACR,oBAAoB;GARvC,iBAAiB,CAkC7B;SAlCY,iBAAiB"}}
